/*
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at https://mozilla.org/MPL/2.0/.
 */

task sourceJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier "sources"
}

artifacts {
    archives sourceJar
}

apply plugin: 'maven-publish'
apply plugin: 'signing'

group = PUBLISH_GROUP_ID
version = PUBLISH_VERSION

ext["signing.keyId"] = System.getenv('SIGNING_KEY_ID')
ext["signing.password"] = System.getenv('SIGNING_PASSWORD')
ext["signing.secretKeyRingFile"] = System.getenv('SIGNING_SECRET_KEY_RING_FILE')
ext["ossrhUsername"] = System.getenv('OSSRH_USERNAME')
ext["ossrhPassword"] = System.getenv('OSSRH_PASSWORD')
ext["profileId"] = System.getenv('PROFILE_ID')

nexusStaging {
    packageGroup = PUBLISH_GROUP_ID
    stagingProfileId = profileId
    username = ossrhUsername
    password = ossrhPassword
}

publishing {
    publications {
        release(MavenPublication) {
            groupId PUBLISH_GROUP_ID
            artifactId PUBLISH_ARTIFACT_ID
            version PUBLISH_VERSION
            artifact("$buildDir/outputs/aar/${project.getName()}-debug.aar")
            artifact sourceJar

            pom {
                name = PUBLISH_ARTIFACT_ID
                description = 'Android WebViews Javascript file injection'
                url = 'https://github.com/jordanbonaldi/WebViewsExtractor'
                licenses {
                    license {
                        name = 'Mozilla Public License 2.0'
                        url = 'https://mozilla.org/MPL/2.0/'
                    }
                }
                developers {
                    developer {
                        id = 'Neferett'
                        name = 'Jordan Bonaldi'
                        email = 'jordanbonaldi@me.com'
                    }
                }
                scm {
                    connection = 'scm:git:github.com/jordanbonaldi/WebViewsExtractor.git'
                    developerConnection = 'scm:git:ssh://github.com/jordanbonaldi/WebViewsExtractor.git'
                    url = 'https://github.com/jordanbonaldi/WebViewsExtractor/tree/master'
                }
                withXml {
                    def dependenciesNode = asNode().appendNode('dependencies')

                    project.configurations.implementation.allDependencies.each {
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', it.group)
                        dependencyNode.appendNode('artifactId', it.name)
                        dependencyNode.appendNode('version', it.version)
                    }
                }
            }
        }
    }
    repositories {
        maven {
            name = "webviewsextractor"

            def releasesRepoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
            def snapshotsRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots/"
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl

            credentials {
                username ossrhUsername
                password ossrhPassword
            }
        }
    }
}

signing {
    sign publishing.publications
}
